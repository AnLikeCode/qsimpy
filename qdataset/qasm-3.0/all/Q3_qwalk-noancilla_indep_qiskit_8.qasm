// Generated from qBraid v0.7.1
OPENQASM 3.0;
include 'stdgates.inc';
// Generated from qiskit v0.24.0 file qiskit/qasm/libs/qelib1.inc

// QASM 3 equivalent definitions of qelib1.inc gates

// idle gate (identity) with length gamma*sqglen
 
// generic single qubit gate

// inverse sqrt(X)

// controlled-sqrt(X)

// controlled phase rotation 
gate cu1 (lambda) a, b{  
  
  u3(0,0,lambda/2) a;
  cx a,b;
  u3(0,0,-lambda/2) b;
  cx a,b;
  u3(0,0,lambda/2) b; 
  
}

// controlled-U

// two-qubit XX rotation
// gate rxx(theta) a, b
// {
//   u3(pi/2, theta, 0) a;
//   h b;
//   cx a,b;
//   u1(-theta) b;
//   cx a,b;
//   h b;
//   ******** why type error ********
//   // u2(-pi, pi-theta) b;
// }

// two-qubit ZZ rotation

// relative-phase CCX

// relative-phase 3-controlled X gate

// 3-controlled X gate

// 3-controlled sqrt(X) gate, this equals the C3X gate 
// where the CU1 rotations are -pi/8 not -pi/4

// 4-controlled X gate 

qubit[7] node;

qubit[1] coin;
bit[8] meas;
h node[0];
cu1(pi/64) node[6],node[0];
cx node[6],node[5];
cu1(-pi/64) node[5],node[0];
cx node[6],node[5];
cu1(pi/64) node[5],node[0];
cx node[5],node[4];
cu1(-pi/64) node[4],node[0];
cx node[6],node[4];
cu1(pi/64) node[4],node[0];
cx node[5],node[4];
cu1(-pi/64) node[4],node[0];
cx node[6],node[4];
cu1(pi/64) node[4],node[0];
cx node[4],node[3];
cu1(-pi/64) node[3],node[0];
cx node[6],node[3];
cu1(pi/64) node[3],node[0];
cx node[5],node[3];
cu1(-pi/64) node[3],node[0];
cx node[6],node[3];
cu1(pi/64) node[3],node[0];
cx node[4],node[3];
cu1(-pi/64) node[3],node[0];
cx node[6],node[3];
cu1(pi/64) node[3],node[0];
cx node[5],node[3];
cu1(-pi/64) node[3],node[0];
cx node[6],node[3];
cu1(pi/64) node[3],node[0];
cx node[3],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[5],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[4],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[5],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[3],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[5],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[4],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[5],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[2],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[4],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[3],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[4],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[2],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[4],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[3],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[4],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
h coin[0];
cx node[1],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[3],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[2],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[3],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[1],coin[0];
cu1(-pi/64) coin[0],node[0];
h node[1];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[3],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[2],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[3],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cu1(pi/32) node[6],node[1];
cx node[6],node[5];
cu1(-pi/32) node[5],node[1];
cx node[6],node[5];
cu1(pi/32) node[5],node[1];
cx node[5],node[4];
cu1(-pi/32) node[4],node[1];
cx node[6],node[4];
cu1(pi/32) node[4],node[1];
cx node[5],node[4];
cu1(-pi/32) node[4],node[1];
cx node[6],node[4];
cu1(pi/32) node[4],node[1];
cx node[4],node[3];
cu1(-pi/32) node[3],node[1];
cx node[6],node[3];
cu1(pi/32) node[3],node[1];
cx node[5],node[3];
cu1(-pi/32) node[3],node[1];
cx node[6],node[3];
cu1(pi/32) node[3],node[1];
cx node[4],node[3];
cu1(-pi/32) node[3],node[1];
cx node[6],node[3];
cu1(pi/32) node[3],node[1];
cx node[5],node[3];
cu1(-pi/32) node[3],node[1];
cx node[6],node[3];
cu1(pi/32) node[3],node[1];
cx node[3],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[5],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[4],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[5],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[3],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[5],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[4],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[5],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[2],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[4],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[3],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[4],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[2],coin[0];
cu1(-pi/32) coin[0],node[1];
h node[2];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[4],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[3],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[4],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
u2(0,0) node[1];
cu1(pi/16) node[6],node[2];
cx node[6],node[5];
cu1(-pi/16) node[5],node[2];
cx node[6],node[5];
cu1(pi/16) node[5],node[2];
cx node[5],node[4];
cu1(-pi/16) node[4],node[2];
cx node[6],node[4];
cu1(pi/16) node[4],node[2];
cx node[5],node[4];
cu1(-pi/16) node[4],node[2];
cx node[6],node[4];
cu1(pi/16) node[4],node[2];
cx node[4],node[3];
cu1(-pi/16) node[3],node[2];
cx node[6],node[3];
cu1(pi/16) node[3],node[2];
cx node[5],node[3];
cu1(-pi/16) node[3],node[2];
cx node[6],node[3];
cu1(pi/16) node[3],node[2];
cx node[4],node[3];
cu1(-pi/16) node[3],node[2];
cx node[6],node[3];
cu1(pi/16) node[3],node[2];
cx node[5],node[3];
cu1(-pi/16) node[3],node[2];
cx node[6],node[3];
cu1(pi/16) node[3],node[2];
cx node[3],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[5],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[4],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[5],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[3],coin[0];
cu1(-pi/16) coin[0],node[2];
h node[3];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[5],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[4],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[5],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
u2(0,0) node[2];
cu1(pi/2) node[6],node[3];
u2(pi/4,-pi) node[6];
cx node[5],node[6];
u2(0,3*pi/4) node[6];
cx coin[0],node[6];
u1(pi/4) node[6];
cx node[4],node[6];
u1(-pi/4) node[6];
cx coin[0],node[6];
u1(pi/4) node[6];
cx node[4],node[6];
u2(pi/4,3*pi/4) node[6];
cx node[5],node[6];
u2(0,3*pi/4) node[6];
cu1(-pi/2) node[6],node[3];
u2(pi/4,-pi) node[6];
cx node[5],node[6];
u2(pi/4,3*pi/4) node[6];
cx node[4],node[6];
u1(-pi/4) node[6];
cx coin[0],node[6];
u1(pi/4) node[6];
cx node[4],node[6];
u1(-pi/4) node[6];
cx coin[0],node[6];
cu1(pi/8) coin[0],node[3];
cx coin[0],node[4];
cu1(-pi/8) node[4],node[3];
cx coin[0],node[4];
cu1(pi/8) node[4],node[3];
u2(pi/4,-pi) node[6];
cx node[5],node[6];
cx node[4],node[5];
cu1(-pi/8) node[5],node[3];
cx coin[0],node[5];
cu1(pi/8) node[5],node[3];
cx node[4],node[5];
u2(pi/8,-pi) node[4];
cu1(-pi/8) node[5],node[3];
cx coin[0],node[5];
p(pi/8) coin[0];
cu1(pi/8) node[5],node[3];
u2(0,0) node[3];
p(pi/8) node[5];
cx coin[0],node[5];
p(-pi/8) node[5];
cx coin[0],node[5];
u2(pi/8,3*pi/4) node[6];
cx node[5],node[6];
p(-pi/8) node[6];
cx coin[0],node[6];
p(pi/8) node[6];
cx node[5],node[6];
p(-pi/8) node[6];
cx coin[0],node[6];
cx node[6],node[4];
p(-pi/8) node[4];
cx node[5],node[4];
p(pi/8) node[4];
cx node[6],node[4];
p(-pi/8) node[4];
cx coin[0],node[4];
p(pi/8) node[4];
cx node[6],node[4];
p(-pi/8) node[4];
cx node[5],node[4];
p(pi/8) node[4];
cx node[6],node[4];
p(-pi/8) node[4];
cx coin[0],node[4];
ccx coin[0],node[6],node[5];
cx coin[0],node[6];
x coin[0];
u2(0,0) node[4];
x node[5];
x node[6];
cu1(pi/64) node[6],node[0];
cx node[6],node[5];
cu1(-pi/64) node[5],node[0];
cx node[6],node[5];
cu1(pi/64) node[5],node[0];
cx node[5],node[4];
cu1(-pi/64) node[4],node[0];
cx node[6],node[4];
cu1(pi/64) node[4],node[0];
cx node[5],node[4];
cu1(-pi/64) node[4],node[0];
cx node[6],node[4];
cu1(pi/64) node[4],node[0];
cx node[4],node[3];
cu1(-pi/64) node[3],node[0];
cx node[6],node[3];
cu1(pi/64) node[3],node[0];
cx node[5],node[3];
cu1(-pi/64) node[3],node[0];
cx node[6],node[3];
cu1(pi/64) node[3],node[0];
cx node[4],node[3];
cu1(-pi/64) node[3],node[0];
cx node[6],node[3];
cu1(pi/64) node[3],node[0];
cx node[5],node[3];
cu1(-pi/64) node[3],node[0];
cx node[6],node[3];
cu1(pi/64) node[3],node[0];
cx node[3],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[5],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[4],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[5],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[3],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[5],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[4],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[5],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[2],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[4],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[3],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[4],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[2],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[4],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[3],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[4],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[1],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[3],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[2],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[3],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[1],coin[0];
cu1(-pi/64) coin[0],node[0];
h node[1];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[3],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[2],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[3],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cu1(pi/32) node[6],node[1];
cx node[6],node[5];
cu1(-pi/32) node[5],node[1];
cx node[6],node[5];
cu1(pi/32) node[5],node[1];
cx node[5],node[4];
cu1(-pi/32) node[4],node[1];
cx node[6],node[4];
cu1(pi/32) node[4],node[1];
cx node[5],node[4];
cu1(-pi/32) node[4],node[1];
cx node[6],node[4];
cu1(pi/32) node[4],node[1];
cx node[4],node[3];
cu1(-pi/32) node[3],node[1];
cx node[6],node[3];
cu1(pi/32) node[3],node[1];
cx node[5],node[3];
cu1(-pi/32) node[3],node[1];
cx node[6],node[3];
cu1(pi/32) node[3],node[1];
cx node[4],node[3];
cu1(-pi/32) node[3],node[1];
cx node[6],node[3];
cu1(pi/32) node[3],node[1];
cx node[5],node[3];
cu1(-pi/32) node[3],node[1];
cx node[6],node[3];
cu1(pi/32) node[3],node[1];
cx node[3],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[5],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[4],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[5],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[3],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[5],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[4],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[5],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[2],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[4],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[3],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[4],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[2],coin[0];
cu1(-pi/32) coin[0],node[1];
h node[2];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[4],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[3],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[4],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
u2(0,0) node[1];
cu1(pi/16) node[6],node[2];
cx node[6],node[5];
cu1(-pi/16) node[5],node[2];
cx node[6],node[5];
cu1(pi/16) node[5],node[2];
cx node[5],node[4];
cu1(-pi/16) node[4],node[2];
cx node[6],node[4];
cu1(pi/16) node[4],node[2];
cx node[5],node[4];
cu1(-pi/16) node[4],node[2];
cx node[6],node[4];
cu1(pi/16) node[4],node[2];
cx node[4],node[3];
cu1(-pi/16) node[3],node[2];
cx node[6],node[3];
cu1(pi/16) node[3],node[2];
cx node[5],node[3];
cu1(-pi/16) node[3],node[2];
cx node[6],node[3];
cu1(pi/16) node[3],node[2];
cx node[4],node[3];
cu1(-pi/16) node[3],node[2];
cx node[6],node[3];
cu1(pi/16) node[3],node[2];
cx node[5],node[3];
cu1(-pi/16) node[3],node[2];
cx node[6],node[3];
cu1(pi/16) node[3],node[2];
cx node[3],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[5],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[4],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[5],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[3],coin[0];
cu1(-pi/16) coin[0],node[2];
h node[3];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[5],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[4],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[5],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
u2(0,0) node[2];
cu1(pi/2) node[6],node[3];
u2(pi/4,-pi) node[6];
cx node[5],node[6];
u2(0,3*pi/4) node[6];
cx coin[0],node[6];
u1(pi/4) node[6];
cx node[4],node[6];
u1(-pi/4) node[6];
cx coin[0],node[6];
u1(pi/4) node[6];
cx node[4],node[6];
u2(pi/4,3*pi/4) node[6];
cx node[5],node[6];
u2(0,3*pi/4) node[6];
cu1(-pi/2) node[6],node[3];
u2(pi/4,-pi) node[6];
cx node[5],node[6];
u2(pi/4,3*pi/4) node[6];
cx node[4],node[6];
u1(-pi/4) node[6];
cx coin[0],node[6];
u1(pi/4) node[6];
cx node[4],node[6];
u1(-pi/4) node[6];
cx coin[0],node[6];
cu1(pi/8) coin[0],node[3];
cx coin[0],node[4];
cu1(-pi/8) node[4],node[3];
cx coin[0],node[4];
cu1(pi/8) node[4],node[3];
u2(pi/4,-pi) node[6];
cx node[5],node[6];
cx node[4],node[5];
cu1(-pi/8) node[5],node[3];
cx coin[0],node[5];
cu1(pi/8) node[5],node[3];
cx node[4],node[5];
u2(pi/8,-pi) node[4];
cu1(-pi/8) node[5],node[3];
cx coin[0],node[5];
p(pi/8) coin[0];
cu1(pi/8) node[5],node[3];
u2(0,0) node[3];
p(pi/8) node[5];
cx coin[0],node[5];
p(-pi/8) node[5];
cx coin[0],node[5];
u2(pi/8,3*pi/4) node[6];
cx node[5],node[6];
p(-pi/8) node[6];
cx coin[0],node[6];
p(pi/8) node[6];
cx node[5],node[6];
p(-pi/8) node[6];
cx coin[0],node[6];
cx node[6],node[4];
p(-pi/8) node[4];
cx node[5],node[4];
p(pi/8) node[4];
cx node[6],node[4];
p(-pi/8) node[4];
cx coin[0],node[4];
p(pi/8) node[4];
cx node[6],node[4];
p(-pi/8) node[4];
cx node[5],node[4];
p(pi/8) node[4];
cx node[6],node[4];
p(-pi/8) node[4];
cx coin[0],node[4];
ccx coin[0],node[6],node[5];
cx coin[0],node[6];
u2(-pi,-pi) coin[0];
u2(0,0) node[4];
x node[5];
x node[6];
cu1(pi/64) node[6],node[0];
cx node[6],node[5];
cu1(-pi/64) node[5],node[0];
cx node[6],node[5];
cu1(pi/64) node[5],node[0];
cx node[5],node[4];
cu1(-pi/64) node[4],node[0];
cx node[6],node[4];
cu1(pi/64) node[4],node[0];
cx node[5],node[4];
cu1(-pi/64) node[4],node[0];
cx node[6],node[4];
cu1(pi/64) node[4],node[0];
cx node[4],node[3];
cu1(-pi/64) node[3],node[0];
cx node[6],node[3];
cu1(pi/64) node[3],node[0];
cx node[5],node[3];
cu1(-pi/64) node[3],node[0];
cx node[6],node[3];
cu1(pi/64) node[3],node[0];
cx node[4],node[3];
cu1(-pi/64) node[3],node[0];
cx node[6],node[3];
cu1(pi/64) node[3],node[0];
cx node[5],node[3];
cu1(-pi/64) node[3],node[0];
cx node[6],node[3];
cu1(pi/64) node[3],node[0];
cx node[3],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[5],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[4],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[5],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[3],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[5],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[4],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[5],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[2],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[4],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[3],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[4],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[2],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[4],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[3],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[4],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[1],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[3],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[2],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[3],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[1],coin[0];
cu1(-pi/64) coin[0],node[0];
h node[1];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[3],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[2],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[3],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cu1(pi/32) node[6],node[1];
cx node[6],node[5];
cu1(-pi/32) node[5],node[1];
cx node[6],node[5];
cu1(pi/32) node[5],node[1];
cx node[5],node[4];
cu1(-pi/32) node[4],node[1];
cx node[6],node[4];
cu1(pi/32) node[4],node[1];
cx node[5],node[4];
cu1(-pi/32) node[4],node[1];
cx node[6],node[4];
cu1(pi/32) node[4],node[1];
cx node[4],node[3];
cu1(-pi/32) node[3],node[1];
cx node[6],node[3];
cu1(pi/32) node[3],node[1];
cx node[5],node[3];
cu1(-pi/32) node[3],node[1];
cx node[6],node[3];
cu1(pi/32) node[3],node[1];
cx node[4],node[3];
cu1(-pi/32) node[3],node[1];
cx node[6],node[3];
cu1(pi/32) node[3],node[1];
cx node[5],node[3];
cu1(-pi/32) node[3],node[1];
cx node[6],node[3];
cu1(pi/32) node[3],node[1];
cx node[3],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[5],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[4],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[5],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[3],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[5],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[4],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[5],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[2],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[4],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[3],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[4],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[2],coin[0];
cu1(-pi/32) coin[0],node[1];
h node[2];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[4],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[3],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[4],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
u2(0,0) node[1];
cu1(pi/16) node[6],node[2];
cx node[6],node[5];
cu1(-pi/16) node[5],node[2];
cx node[6],node[5];
cu1(pi/16) node[5],node[2];
cx node[5],node[4];
cu1(-pi/16) node[4],node[2];
cx node[6],node[4];
cu1(pi/16) node[4],node[2];
cx node[5],node[4];
cu1(-pi/16) node[4],node[2];
cx node[6],node[4];
cu1(pi/16) node[4],node[2];
cx node[4],node[3];
cu1(-pi/16) node[3],node[2];
cx node[6],node[3];
cu1(pi/16) node[3],node[2];
cx node[5],node[3];
cu1(-pi/16) node[3],node[2];
cx node[6],node[3];
cu1(pi/16) node[3],node[2];
cx node[4],node[3];
cu1(-pi/16) node[3],node[2];
cx node[6],node[3];
cu1(pi/16) node[3],node[2];
cx node[5],node[3];
cu1(-pi/16) node[3],node[2];
cx node[6],node[3];
cu1(pi/16) node[3],node[2];
cx node[3],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[5],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[4],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[5],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[3],coin[0];
cu1(-pi/16) coin[0],node[2];
h node[3];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[5],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[4],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[5],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
u2(0,0) node[2];
cu1(pi/2) node[6],node[3];
u2(pi/4,-pi) node[6];
cx node[5],node[6];
u2(0,3*pi/4) node[6];
cx coin[0],node[6];
u1(pi/4) node[6];
cx node[4],node[6];
u1(-pi/4) node[6];
cx coin[0],node[6];
u1(pi/4) node[6];
cx node[4],node[6];
u2(pi/4,3*pi/4) node[6];
cx node[5],node[6];
u2(0,3*pi/4) node[6];
cu1(-pi/2) node[6],node[3];
u2(pi/4,-pi) node[6];
cx node[5],node[6];
u2(pi/4,3*pi/4) node[6];
cx node[4],node[6];
u1(-pi/4) node[6];
cx coin[0],node[6];
u1(pi/4) node[6];
cx node[4],node[6];
u1(-pi/4) node[6];
cx coin[0],node[6];
cu1(pi/8) coin[0],node[3];
cx coin[0],node[4];
cu1(-pi/8) node[4],node[3];
cx coin[0],node[4];
cu1(pi/8) node[4],node[3];
u2(pi/4,-pi) node[6];
cx node[5],node[6];
cx node[4],node[5];
cu1(-pi/8) node[5],node[3];
cx coin[0],node[5];
cu1(pi/8) node[5],node[3];
cx node[4],node[5];
u2(pi/8,-pi) node[4];
cu1(-pi/8) node[5],node[3];
cx coin[0],node[5];
p(pi/8) coin[0];
cu1(pi/8) node[5],node[3];
u2(0,0) node[3];
p(pi/8) node[5];
cx coin[0],node[5];
p(-pi/8) node[5];
cx coin[0],node[5];
u2(pi/8,3*pi/4) node[6];
cx node[5],node[6];
p(-pi/8) node[6];
cx coin[0],node[6];
p(pi/8) node[6];
cx node[5],node[6];
p(-pi/8) node[6];
cx coin[0],node[6];
cx node[6],node[4];
p(-pi/8) node[4];
cx node[5],node[4];
p(pi/8) node[4];
cx node[6],node[4];
p(-pi/8) node[4];
cx coin[0],node[4];
p(pi/8) node[4];
cx node[6],node[4];
p(-pi/8) node[4];
cx node[5],node[4];
p(pi/8) node[4];
cx node[6],node[4];
p(-pi/8) node[4];
cx coin[0],node[4];
ccx coin[0],node[6],node[5];
cx coin[0],node[6];
x coin[0];
u2(0,0) node[4];
x node[5];
x node[6];
cu1(pi/64) node[6],node[0];
cx node[6],node[5];
cu1(-pi/64) node[5],node[0];
cx node[6],node[5];
cu1(pi/64) node[5],node[0];
cx node[5],node[4];
cu1(-pi/64) node[4],node[0];
cx node[6],node[4];
cu1(pi/64) node[4],node[0];
cx node[5],node[4];
cu1(-pi/64) node[4],node[0];
cx node[6],node[4];
cu1(pi/64) node[4],node[0];
cx node[4],node[3];
cu1(-pi/64) node[3],node[0];
cx node[6],node[3];
cu1(pi/64) node[3],node[0];
cx node[5],node[3];
cu1(-pi/64) node[3],node[0];
cx node[6],node[3];
cu1(pi/64) node[3],node[0];
cx node[4],node[3];
cu1(-pi/64) node[3],node[0];
cx node[6],node[3];
cu1(pi/64) node[3],node[0];
cx node[5],node[3];
cu1(-pi/64) node[3],node[0];
cx node[6],node[3];
cu1(pi/64) node[3],node[0];
cx node[3],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[5],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[4],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[5],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[3],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[5],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[4],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[5],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[2],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[4],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[3],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[4],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[2],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[4],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[3],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[4],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[1],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[3],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[2],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[3],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[1],coin[0];
cu1(-pi/64) coin[0],node[0];
h node[1];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[3],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[2],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[3],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cu1(pi/32) node[6],node[1];
cx node[6],node[5];
cu1(-pi/32) node[5],node[1];
cx node[6],node[5];
cu1(pi/32) node[5],node[1];
cx node[5],node[4];
cu1(-pi/32) node[4],node[1];
cx node[6],node[4];
cu1(pi/32) node[4],node[1];
cx node[5],node[4];
cu1(-pi/32) node[4],node[1];
cx node[6],node[4];
cu1(pi/32) node[4],node[1];
cx node[4],node[3];
cu1(-pi/32) node[3],node[1];
cx node[6],node[3];
cu1(pi/32) node[3],node[1];
cx node[5],node[3];
cu1(-pi/32) node[3],node[1];
cx node[6],node[3];
cu1(pi/32) node[3],node[1];
cx node[4],node[3];
cu1(-pi/32) node[3],node[1];
cx node[6],node[3];
cu1(pi/32) node[3],node[1];
cx node[5],node[3];
cu1(-pi/32) node[3],node[1];
cx node[6],node[3];
cu1(pi/32) node[3],node[1];
cx node[3],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[5],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[4],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[5],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[3],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[5],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[4],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[5],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[2],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[4],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[3],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[4],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[2],coin[0];
cu1(-pi/32) coin[0],node[1];
h node[2];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[4],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[3],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[4],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
u2(0,0) node[1];
cu1(pi/16) node[6],node[2];
cx node[6],node[5];
cu1(-pi/16) node[5],node[2];
cx node[6],node[5];
cu1(pi/16) node[5],node[2];
cx node[5],node[4];
cu1(-pi/16) node[4],node[2];
cx node[6],node[4];
cu1(pi/16) node[4],node[2];
cx node[5],node[4];
cu1(-pi/16) node[4],node[2];
cx node[6],node[4];
cu1(pi/16) node[4],node[2];
cx node[4],node[3];
cu1(-pi/16) node[3],node[2];
cx node[6],node[3];
cu1(pi/16) node[3],node[2];
cx node[5],node[3];
cu1(-pi/16) node[3],node[2];
cx node[6],node[3];
cu1(pi/16) node[3],node[2];
cx node[4],node[3];
cu1(-pi/16) node[3],node[2];
cx node[6],node[3];
cu1(pi/16) node[3],node[2];
cx node[5],node[3];
cu1(-pi/16) node[3],node[2];
cx node[6],node[3];
cu1(pi/16) node[3],node[2];
cx node[3],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[5],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[4],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[5],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[3],coin[0];
cu1(-pi/16) coin[0],node[2];
h node[3];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[5],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[4],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[5],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
u2(0,0) node[2];
cu1(pi/2) node[6],node[3];
u2(pi/4,-pi) node[6];
cx node[5],node[6];
u2(0,3*pi/4) node[6];
cx coin[0],node[6];
u1(pi/4) node[6];
cx node[4],node[6];
u1(-pi/4) node[6];
cx coin[0],node[6];
u1(pi/4) node[6];
cx node[4],node[6];
u2(pi/4,3*pi/4) node[6];
cx node[5],node[6];
u2(0,3*pi/4) node[6];
cu1(-pi/2) node[6],node[3];
u2(pi/4,-pi) node[6];
cx node[5],node[6];
u2(pi/4,3*pi/4) node[6];
cx node[4],node[6];
u1(-pi/4) node[6];
cx coin[0],node[6];
u1(pi/4) node[6];
cx node[4],node[6];
u1(-pi/4) node[6];
cx coin[0],node[6];
cu1(pi/8) coin[0],node[3];
cx coin[0],node[4];
cu1(-pi/8) node[4],node[3];
cx coin[0],node[4];
cu1(pi/8) node[4],node[3];
u2(pi/4,-pi) node[6];
cx node[5],node[6];
cx node[4],node[5];
cu1(-pi/8) node[5],node[3];
cx coin[0],node[5];
cu1(pi/8) node[5],node[3];
cx node[4],node[5];
u2(pi/8,-pi) node[4];
cu1(-pi/8) node[5],node[3];
cx coin[0],node[5];
p(pi/8) coin[0];
cu1(pi/8) node[5],node[3];
u2(0,0) node[3];
p(pi/8) node[5];
cx coin[0],node[5];
p(-pi/8) node[5];
cx coin[0],node[5];
u2(pi/8,3*pi/4) node[6];
cx node[5],node[6];
p(-pi/8) node[6];
cx coin[0],node[6];
p(pi/8) node[6];
cx node[5],node[6];
p(-pi/8) node[6];
cx coin[0],node[6];
cx node[6],node[4];
p(-pi/8) node[4];
cx node[5],node[4];
p(pi/8) node[4];
cx node[6],node[4];
p(-pi/8) node[4];
cx coin[0],node[4];
p(pi/8) node[4];
cx node[6],node[4];
p(-pi/8) node[4];
cx node[5],node[4];
p(pi/8) node[4];
cx node[6],node[4];
p(-pi/8) node[4];
cx coin[0],node[4];
ccx coin[0],node[6],node[5];
cx coin[0],node[6];
u2(-pi,-pi) coin[0];
u2(0,0) node[4];
x node[5];
x node[6];
cu1(pi/64) node[6],node[0];
cx node[6],node[5];
cu1(-pi/64) node[5],node[0];
cx node[6],node[5];
cu1(pi/64) node[5],node[0];
cx node[5],node[4];
cu1(-pi/64) node[4],node[0];
cx node[6],node[4];
cu1(pi/64) node[4],node[0];
cx node[5],node[4];
cu1(-pi/64) node[4],node[0];
cx node[6],node[4];
cu1(pi/64) node[4],node[0];
cx node[4],node[3];
cu1(-pi/64) node[3],node[0];
cx node[6],node[3];
cu1(pi/64) node[3],node[0];
cx node[5],node[3];
cu1(-pi/64) node[3],node[0];
cx node[6],node[3];
cu1(pi/64) node[3],node[0];
cx node[4],node[3];
cu1(-pi/64) node[3],node[0];
cx node[6],node[3];
cu1(pi/64) node[3],node[0];
cx node[5],node[3];
cu1(-pi/64) node[3],node[0];
cx node[6],node[3];
cu1(pi/64) node[3],node[0];
cx node[3],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[5],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[4],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[5],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[3],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[5],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[4],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[5],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[2],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[4],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[3],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[4],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[2],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[4],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[3],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[4],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[1],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[3],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[2],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[3],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[1],coin[0];
cu1(-pi/64) coin[0],node[0];
h node[1];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[3],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[2],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[3],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cu1(pi/32) node[6],node[1];
cx node[6],node[5];
cu1(-pi/32) node[5],node[1];
cx node[6],node[5];
cu1(pi/32) node[5],node[1];
cx node[5],node[4];
cu1(-pi/32) node[4],node[1];
cx node[6],node[4];
cu1(pi/32) node[4],node[1];
cx node[5],node[4];
cu1(-pi/32) node[4],node[1];
cx node[6],node[4];
cu1(pi/32) node[4],node[1];
cx node[4],node[3];
cu1(-pi/32) node[3],node[1];
cx node[6],node[3];
cu1(pi/32) node[3],node[1];
cx node[5],node[3];
cu1(-pi/32) node[3],node[1];
cx node[6],node[3];
cu1(pi/32) node[3],node[1];
cx node[4],node[3];
cu1(-pi/32) node[3],node[1];
cx node[6],node[3];
cu1(pi/32) node[3],node[1];
cx node[5],node[3];
cu1(-pi/32) node[3],node[1];
cx node[6],node[3];
cu1(pi/32) node[3],node[1];
cx node[3],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[5],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[4],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[5],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[3],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[5],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[4],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[5],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[2],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[4],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[3],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[4],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[2],coin[0];
cu1(-pi/32) coin[0],node[1];
h node[2];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[4],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[3],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[4],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
u2(0,0) node[1];
cu1(pi/16) node[6],node[2];
cx node[6],node[5];
cu1(-pi/16) node[5],node[2];
cx node[6],node[5];
cu1(pi/16) node[5],node[2];
cx node[5],node[4];
cu1(-pi/16) node[4],node[2];
cx node[6],node[4];
cu1(pi/16) node[4],node[2];
cx node[5],node[4];
cu1(-pi/16) node[4],node[2];
cx node[6],node[4];
cu1(pi/16) node[4],node[2];
cx node[4],node[3];
cu1(-pi/16) node[3],node[2];
cx node[6],node[3];
cu1(pi/16) node[3],node[2];
cx node[5],node[3];
cu1(-pi/16) node[3],node[2];
cx node[6],node[3];
cu1(pi/16) node[3],node[2];
cx node[4],node[3];
cu1(-pi/16) node[3],node[2];
cx node[6],node[3];
cu1(pi/16) node[3],node[2];
cx node[5],node[3];
cu1(-pi/16) node[3],node[2];
cx node[6],node[3];
cu1(pi/16) node[3],node[2];
cx node[3],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[5],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[4],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[5],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[3],coin[0];
cu1(-pi/16) coin[0],node[2];
h node[3];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[5],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[4],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[5],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
u2(0,0) node[2];
cu1(pi/2) node[6],node[3];
u2(pi/4,-pi) node[6];
cx node[5],node[6];
u2(0,3*pi/4) node[6];
cx coin[0],node[6];
u1(pi/4) node[6];
cx node[4],node[6];
u1(-pi/4) node[6];
cx coin[0],node[6];
u1(pi/4) node[6];
cx node[4],node[6];
u2(pi/4,3*pi/4) node[6];
cx node[5],node[6];
u2(0,3*pi/4) node[6];
cu1(-pi/2) node[6],node[3];
u2(pi/4,-pi) node[6];
cx node[5],node[6];
u2(pi/4,3*pi/4) node[6];
cx node[4],node[6];
u1(-pi/4) node[6];
cx coin[0],node[6];
u1(pi/4) node[6];
cx node[4],node[6];
u1(-pi/4) node[6];
cx coin[0],node[6];
cu1(pi/8) coin[0],node[3];
cx coin[0],node[4];
cu1(-pi/8) node[4],node[3];
cx coin[0],node[4];
cu1(pi/8) node[4],node[3];
u2(pi/4,-pi) node[6];
cx node[5],node[6];
cx node[4],node[5];
cu1(-pi/8) node[5],node[3];
cx coin[0],node[5];
cu1(pi/8) node[5],node[3];
cx node[4],node[5];
u2(pi/8,-pi) node[4];
cu1(-pi/8) node[5],node[3];
cx coin[0],node[5];
p(pi/8) coin[0];
cu1(pi/8) node[5],node[3];
u2(0,0) node[3];
p(pi/8) node[5];
cx coin[0],node[5];
p(-pi/8) node[5];
cx coin[0],node[5];
u2(pi/8,3*pi/4) node[6];
cx node[5],node[6];
p(-pi/8) node[6];
cx coin[0],node[6];
p(pi/8) node[6];
cx node[5],node[6];
p(-pi/8) node[6];
cx coin[0],node[6];
cx node[6],node[4];
p(-pi/8) node[4];
cx node[5],node[4];
p(pi/8) node[4];
cx node[6],node[4];
p(-pi/8) node[4];
cx coin[0],node[4];
p(pi/8) node[4];
cx node[6],node[4];
p(-pi/8) node[4];
cx node[5],node[4];
p(pi/8) node[4];
cx node[6],node[4];
p(-pi/8) node[4];
cx coin[0],node[4];
ccx coin[0],node[6],node[5];
cx coin[0],node[6];
x coin[0];
u2(0,0) node[4];
x node[5];
x node[6];
cu1(pi/64) node[6],node[0];
cx node[6],node[5];
cu1(-pi/64) node[5],node[0];
cx node[6],node[5];
cu1(pi/64) node[5],node[0];
cx node[5],node[4];
cu1(-pi/64) node[4],node[0];
cx node[6],node[4];
cu1(pi/64) node[4],node[0];
cx node[5],node[4];
cu1(-pi/64) node[4],node[0];
cx node[6],node[4];
cu1(pi/64) node[4],node[0];
cx node[4],node[3];
cu1(-pi/64) node[3],node[0];
cx node[6],node[3];
cu1(pi/64) node[3],node[0];
cx node[5],node[3];
cu1(-pi/64) node[3],node[0];
cx node[6],node[3];
cu1(pi/64) node[3],node[0];
cx node[4],node[3];
cu1(-pi/64) node[3],node[0];
cx node[6],node[3];
cu1(pi/64) node[3],node[0];
cx node[5],node[3];
cu1(-pi/64) node[3],node[0];
cx node[6],node[3];
cu1(pi/64) node[3],node[0];
cx node[3],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[5],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[4],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[5],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[3],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[5],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[4],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[5],node[2];
cu1(-pi/64) node[2],node[0];
cx node[6],node[2];
cu1(pi/64) node[2],node[0];
cx node[2],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[4],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[3],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[4],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[2],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[4],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[3],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[4],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[5],node[1];
cu1(-pi/64) node[1],node[0];
cx node[6],node[1];
cu1(pi/64) node[1],node[0];
cx node[1],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[3],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[2],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[3],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[1],coin[0];
cu1(-pi/64) coin[0],node[0];
h node[1];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[3],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[2],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[3],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[4],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
cx node[5],coin[0];
cu1(-pi/64) coin[0],node[0];
cx node[6],coin[0];
cu1(pi/64) coin[0],node[0];
h node[0];
cu1(pi/32) node[6],node[1];
cx node[6],node[5];
cu1(-pi/32) node[5],node[1];
cx node[6],node[5];
cu1(pi/32) node[5],node[1];
cx node[5],node[4];
cu1(-pi/32) node[4],node[1];
cx node[6],node[4];
cu1(pi/32) node[4],node[1];
cx node[5],node[4];
cu1(-pi/32) node[4],node[1];
cx node[6],node[4];
cu1(pi/32) node[4],node[1];
cx node[4],node[3];
cu1(-pi/32) node[3],node[1];
cx node[6],node[3];
cu1(pi/32) node[3],node[1];
cx node[5],node[3];
cu1(-pi/32) node[3],node[1];
cx node[6],node[3];
cu1(pi/32) node[3],node[1];
cx node[4],node[3];
cu1(-pi/32) node[3],node[1];
cx node[6],node[3];
cu1(pi/32) node[3],node[1];
cx node[5],node[3];
cu1(-pi/32) node[3],node[1];
cx node[6],node[3];
cu1(pi/32) node[3],node[1];
cx node[3],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[5],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[4],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[5],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[3],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[5],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[4],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[5],node[2];
cu1(-pi/32) node[2],node[1];
cx node[6],node[2];
cu1(pi/32) node[2],node[1];
cx node[2],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[4],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[3],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[4],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[2],coin[0];
cu1(-pi/32) coin[0],node[1];
h node[2];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[4],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[3],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[4],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
cx node[5],coin[0];
cu1(-pi/32) coin[0],node[1];
cx node[6],coin[0];
cu1(pi/32) coin[0],node[1];
u2(0,0) node[1];
cu1(pi/16) node[6],node[2];
cx node[6],node[5];
cu1(-pi/16) node[5],node[2];
cx node[6],node[5];
cu1(pi/16) node[5],node[2];
cx node[5],node[4];
cu1(-pi/16) node[4],node[2];
cx node[6],node[4];
cu1(pi/16) node[4],node[2];
cx node[5],node[4];
cu1(-pi/16) node[4],node[2];
cx node[6],node[4];
cu1(pi/16) node[4],node[2];
cx node[4],node[3];
cu1(-pi/16) node[3],node[2];
cx node[6],node[3];
cu1(pi/16) node[3],node[2];
cx node[5],node[3];
cu1(-pi/16) node[3],node[2];
cx node[6],node[3];
cu1(pi/16) node[3],node[2];
cx node[4],node[3];
cu1(-pi/16) node[3],node[2];
cx node[6],node[3];
cu1(pi/16) node[3],node[2];
cx node[5],node[3];
cu1(-pi/16) node[3],node[2];
cx node[6],node[3];
cu1(pi/16) node[3],node[2];
cx node[3],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[5],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[4],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[5],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[3],coin[0];
cu1(-pi/16) coin[0],node[2];
h node[3];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[5],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[4],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
cx node[5],coin[0];
cu1(-pi/16) coin[0],node[2];
cx node[6],coin[0];
cu1(pi/16) coin[0],node[2];
u2(0,0) node[2];
cu1(pi/2) node[6],node[3];
u2(pi/4,-pi) node[6];
cx node[5],node[6];
u2(0,3*pi/4) node[6];
cx coin[0],node[6];
u1(pi/4) node[6];
cx node[4],node[6];
u1(-pi/4) node[6];
cx coin[0],node[6];
u1(pi/4) node[6];
cx node[4],node[6];
u2(pi/4,3*pi/4) node[6];
cx node[5],node[6];
u2(0,3*pi/4) node[6];
cu1(-pi/2) node[6],node[3];
u2(pi/4,-pi) node[6];
cx node[5],node[6];
u2(pi/4,3*pi/4) node[6];
cx node[4],node[6];
u1(-pi/4) node[6];
cx coin[0],node[6];
u1(pi/4) node[6];
cx node[4],node[6];
u1(-pi/4) node[6];
cx coin[0],node[6];
cu1(pi/8) coin[0],node[3];
cx coin[0],node[4];
cu1(-pi/8) node[4],node[3];
cx coin[0],node[4];
cu1(pi/8) node[4],node[3];
u2(pi/4,-pi) node[6];
cx node[5],node[6];
cx node[4],node[5];
cu1(-pi/8) node[5],node[3];
cx coin[0],node[5];
cu1(pi/8) node[5],node[3];
cx node[4],node[5];
u2(pi/8,-pi) node[4];
cu1(-pi/8) node[5],node[3];
cx coin[0],node[5];
p(pi/8) coin[0];
cu1(pi/8) node[5],node[3];
u2(0,0) node[3];
p(pi/8) node[5];
cx coin[0],node[5];
p(-pi/8) node[5];
cx coin[0],node[5];
u2(pi/8,3*pi/4) node[6];
cx node[5],node[6];
p(-pi/8) node[6];
cx coin[0],node[6];
p(pi/8) node[6];
cx node[5],node[6];
p(-pi/8) node[6];
cx coin[0],node[6];
cx node[6],node[4];
p(-pi/8) node[4];
cx node[5],node[4];
p(pi/8) node[4];
cx node[6],node[4];
p(-pi/8) node[4];
cx coin[0],node[4];
p(pi/8) node[4];
cx node[6],node[4];
p(-pi/8) node[4];
cx node[5],node[4];
p(pi/8) node[4];
cx node[6],node[4];
p(-pi/8) node[4];
cx coin[0],node[4];
ccx coin[0],node[6],node[5];
cx coin[0],node[6];
x coin[0];
u2(0,0) node[4];
x node[5];
x node[6];
barrier node[0],node[1],node[2],node[3],node[4],node[5],node[6],coin[0];
meas[0] = measure node[0];
meas[1] = measure node[1];
meas[2] = measure node[2];
meas[3] = measure node[3];
meas[4] = measure node[4];
meas[5] = measure node[5];
meas[6] = measure node[6];
meas[7] = measure coin[0];