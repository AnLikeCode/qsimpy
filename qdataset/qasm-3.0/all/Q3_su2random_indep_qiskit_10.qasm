// Generated from qBraid v0.7.1
OPENQASM 3.0;
include 'stdgates.inc';
// Generated from qiskit v0.24.0 file qiskit/qasm/libs/qelib1.inc

// QASM 3 equivalent definitions of qelib1.inc gates

// idle gate (identity) with length gamma*sqglen
 
// generic single qubit gate

// inverse sqrt(X)

// controlled-sqrt(X)

// controlled phase rotation 

// controlled-U

// two-qubit XX rotation
// gate rxx(theta) a, b
// {
//   u3(pi/2, theta, 0) a;
//   h b;
//   cx a,b;
//   u1(-theta) b;
//   cx a,b;
//   h b;
//   ******** why type error ********
//   // u2(-pi, pi-theta) b;
// }

// two-qubit ZZ rotation

// relative-phase CCX

// relative-phase 3-controlled X gate

// 3-controlled X gate

// 3-controlled sqrt(X) gate, this equals the C3X gate 
// where the CU1 rotations are -pi/8 not -pi/4

// 4-controlled X gate 

qubit[10] q;
bit[10] meas;
u3(1.4368347742816616,1.1646500873100205,-pi) q[0];
u3(0.13038834331032634,-0.2928382424047804,0) q[1];
cx q[0],q[1];
u3(2.3018560275705338,-3.1167849646094092,-pi) q[2];
cx q[0],q[2];
cx q[1],q[2];
u3(1.5783117544539513,0.07660625016677525,-pi) q[3];
cx q[0],q[3];
cx q[1],q[3];
cx q[2],q[3];
u3(3.1322119352256292,-1.1773372206208812,0) q[4];
cx q[0],q[4];
cx q[1],q[4];
cx q[2],q[4];
cx q[3],q[4];
u3(1.4124389803026798,-2.434570523812673,0) q[5];
cx q[0],q[5];
cx q[1],q[5];
cx q[2],q[5];
cx q[3],q[5];
cx q[4],q[5];
u3(1.2444656817555668,-1.7482629013133648,0) q[6];
cx q[0],q[6];
cx q[1],q[6];
cx q[2],q[6];
cx q[3],q[6];
cx q[4],q[6];
cx q[5],q[6];
u3(1.5046299106322627,-1.3076812305427237,-pi) q[7];
cx q[0],q[7];
cx q[1],q[7];
cx q[2],q[7];
cx q[3],q[7];
cx q[4],q[7];
cx q[5],q[7];
cx q[6],q[7];
u3(1.0625547235745711,-0.5166404252966217,0) q[8];
cx q[0],q[8];
cx q[1],q[8];
cx q[2],q[8];
cx q[3],q[8];
cx q[4],q[8];
cx q[5],q[8];
cx q[6],q[8];
cx q[7],q[8];
u3(0.5550554224571163,-1.7933732440688743,0) q[9];
cx q[0],q[9];
u3(2.8742785055981956,1.917773905749895,-pi) q[0];
cx q[1],q[9];
u3(0.8932807542109367,-3.005579583727833,0) q[1];
cx q[0],q[1];
cx q[2],q[9];
u3(2.345769178126651,-0.5739760098973861,0) q[2];
cx q[0],q[2];
cx q[1],q[2];
cx q[3],q[9];
u3(2.0474788819188667,-1.135773149735491,-pi) q[3];
cx q[0],q[3];
cx q[1],q[3];
cx q[2],q[3];
cx q[4],q[9];
u3(2.7761197097590844,0.5683728542359914,0) q[4];
cx q[0],q[4];
cx q[1],q[4];
cx q[2],q[4];
cx q[3],q[4];
cx q[5],q[9];
u3(2.72699034602209,1.8893541777246625,0) q[5];
cx q[0],q[5];
cx q[1],q[5];
cx q[2],q[5];
cx q[3],q[5];
cx q[4],q[5];
cx q[6],q[9];
u3(2.401640904800445,-2.4254077858804965,-pi) q[6];
cx q[0],q[6];
cx q[1],q[6];
cx q[2],q[6];
cx q[3],q[6];
cx q[4],q[6];
cx q[5],q[6];
cx q[7],q[9];
u3(3.059042641009883,2.0651656802006935,-pi) q[7];
cx q[0],q[7];
cx q[1],q[7];
cx q[2],q[7];
cx q[3],q[7];
cx q[4],q[7];
cx q[5],q[7];
cx q[6],q[7];
cx q[8],q[9];
u3(2.1966192898367836,-2.846934388642458,-pi) q[8];
cx q[0],q[8];
cx q[1],q[8];
cx q[2],q[8];
cx q[3],q[8];
cx q[4],q[8];
cx q[5],q[8];
cx q[6],q[8];
cx q[7],q[8];
u3(2.5067461861055573,0.7934855547557511,-pi) q[9];
cx q[0],q[9];
u3(2.8426000178928454,-0.6752586753862846,-pi) q[0];
cx q[1],q[9];
u3(1.1354532936221056,-2.554363801359381,-pi) q[1];
cx q[0],q[1];
cx q[2],q[9];
u3(1.2500242582094414,-1.1240263022165689,0) q[2];
cx q[0],q[2];
cx q[1],q[2];
cx q[3],q[9];
u3(0.8994360763247731,-2.1918765046211157,-pi) q[3];
cx q[0],q[3];
cx q[1],q[3];
cx q[2],q[3];
cx q[4],q[9];
u3(2.2094986973106154,2.413462260298216,0) q[4];
cx q[0],q[4];
cx q[1],q[4];
cx q[2],q[4];
cx q[3],q[4];
cx q[5],q[9];
u3(1.541594019662195,2.7913723796959733,-pi) q[5];
cx q[0],q[5];
cx q[1],q[5];
cx q[2],q[5];
cx q[3],q[5];
cx q[4],q[5];
cx q[6],q[9];
u3(1.8595822481541888,-0.0777514342798824,0) q[6];
cx q[0],q[6];
cx q[1],q[6];
cx q[2],q[6];
cx q[3],q[6];
cx q[4],q[6];
cx q[5],q[6];
cx q[7],q[9];
u3(0.7292486063206927,-0.2745466276846109,-pi) q[7];
cx q[0],q[7];
cx q[1],q[7];
cx q[2],q[7];
cx q[3],q[7];
cx q[4],q[7];
cx q[5],q[7];
cx q[6],q[7];
cx q[8],q[9];
u3(2.0452499401435484,-1.0925023928214674,0) q[8];
cx q[0],q[8];
cx q[1],q[8];
cx q[2],q[8];
cx q[3],q[8];
cx q[4],q[8];
cx q[5],q[8];
cx q[6],q[8];
cx q[7],q[8];
u3(1.0368254640000032,1.579430266654784,0) q[9];
cx q[0],q[9];
u3(2.5297885440896417,-2.890521540662405,-pi) q[0];
cx q[1],q[9];
u3(0.6105260558088237,-0.4430137085195698,-pi) q[1];
cx q[2],q[9];
u3(2.924458657431965,-1.1628487595917854,-pi) q[2];
cx q[3],q[9];
u3(2.5748407749922118,0.8575991446821432,-pi) q[3];
cx q[4],q[9];
u3(0.24681462267060233,2.176163324566387,0) q[4];
cx q[5],q[9];
u3(2.2442391778450834,0.2707886752855062,0) q[5];
cx q[6],q[9];
u3(0.5002237983271179,-0.7545152110842537,0) q[6];
cx q[7],q[9];
u3(1.9192612708638719,-1.4876032641952888,0) q[7];
cx q[8],q[9];
u3(2.0779707218466736,-0.7659413833270339,0) q[8];
u3(1.421066159778744,-0.5183053354057825,-pi) q[9];
barrier q[0],q[1],q[2],q[3],q[4],q[5],q[6],q[7],q[8],q[9];
meas[0] = measure q[0];
meas[1] = measure q[1];
meas[2] = measure q[2];
meas[3] = measure q[3];
meas[4] = measure q[4];
meas[5] = measure q[5];
meas[6] = measure q[6];
meas[7] = measure q[7];
meas[8] = measure q[8];
meas[9] = measure q[9];